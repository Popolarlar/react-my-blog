{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jin/ReactProject/my-blog-app/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jin/ReactProject/my-blog-app/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";var UpvotesSection=function UpvotesSection(_ref){var articleName=_ref.articleName,upvotes=_ref.upvotes,setArticleInfo=_ref.setArticleInfo;// The function to post when the button is clicked\n// fetch(`path`,{options})\nvar upvoteArticle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/articles/\".concat(articleName,\"/upvote\"),{method:\"post\"});case 2:result=_context.sent;_context.next=5;return result.json();case 5:body=_context.sent;// Trigger the root state change, which refreshs all the components\nsetArticleInfo(body);case 7:case\"end\":return _context.stop();}}},_callee);}));return function upvoteArticle(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{id:\"upvotes-section\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return upvoteArticle();}},\"Upvote!\"),/*#__PURE__*/React.createElement(\"p\",null,\"This post has been upvoted \",upvotes,\" times\"));};export default UpvotesSection;","map":{"version":3,"sources":["/Users/jin/ReactProject/my-blog-app/my-blog/src/components/UpvotesSection.js"],"names":["React","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","fetch","method","result","json","body"],"mappings":"iUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA8C,IAA3CC,CAAAA,WAA2C,MAA3CA,WAA2C,CAA9BC,OAA8B,MAA9BA,OAA8B,CAArBC,cAAqB,MAArBA,cAAqB,CACnE;AACA;AACA,GAAMC,CAAAA,aAAa,2FAAG,yKACCC,CAAAA,KAAK,yBAAkBJ,WAAlB,YAAwC,CAChEK,MAAM,CAAE,MADwD,CAAxC,CADN,QACdC,MADc,qCAMDA,CAAAA,MAAM,CAACC,IAAP,EANC,QAMdC,IANc,eAQpB;AACAN,cAAc,CAACM,IAAD,CAAd,CAToB,sDAAH,kBAAbL,CAAAA,aAAa,2CAAnB,CAYA,mBACE,2BAAK,EAAE,CAAC,iBAAR,eACE,8BAAQ,OAAO,CAAE,yBAAMA,CAAAA,aAAa,EAAnB,EAAjB,YADF,cAEE,2DAA+BF,OAA/B,UAFF,CADF,CAMD,CArBD,CAuBA,cAAeF,CAAAA,cAAf","sourcesContent":["import React from \"react\";\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n  // The function to post when the button is clicked\n  // fetch(`path`,{options})\n  const upvoteArticle = async () => {\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: \"post\",\n    });\n\n    // The api return the updated article\n    const body = await result.json();\n\n    // Trigger the root state change, which refreshs all the components\n    setArticleInfo(body);\n  };\n\n  return (\n    <div id=\"upvotes-section\">\n      <button onClick={() => upvoteArticle()}>Upvote!</button>\n      <p>This post has been upvoted {upvotes} times</p>\n    </div>\n  );\n};\n\nexport default UpvotesSection;\n"]},"metadata":{},"sourceType":"module"}