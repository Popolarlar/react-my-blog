{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jin/ReactProject/my-blog-app/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jin/ReactProject/my-blog-app/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jin/ReactProject/my-blog-app/my-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";var AddCommentForm=function AddCommentForm(_ref){var articleName=_ref.articleName,setArticleInfo=_ref.setArticleInfo;// Keep the state of user-name and comment-text\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),commentText=_useState4[0],setCommentText=_useState4[1];// The function to post the form when the button is clicked\n// fetch(`path`,{options})\nvar addComment=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/articles/\".concat(articleName,\"/add-comment\"),{method:\"post\",body:JSON.stringify({username:username,text:commentText}),headers:{\"Content-Type\":\"application/json\"}});case 2:result=_context.sent;_context.next=5;return result.json();case 5:body=_context.sent;// Trigger the root state change, which refreshs all the components\nsetArticleInfo(body);// Reset the form\nsetUsername(\"\");setCommentText(\"\");case 9:case\"end\":return _context.stop();}}},_callee);}));return function addComment(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{id:\"add-comment-form\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Add a Comment:\"),/*#__PURE__*/React.createElement(\"label\",null,\"Name:\",/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:username,onChange:function onChange(event){return setUsername(event.target.value);}})),/*#__PURE__*/React.createElement(\"label\",null,\"Comment:\",/*#__PURE__*/React.createElement(\"textarea\",{rows:\"4\",cols:\"50\",value:commentText,onChange:function onChange(event){return setCommentText(event.target.value);}})),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return addComment();}},\"Submit\"));};export default AddCommentForm;","map":{"version":3,"sources":["/Users/jin/ReactProject/my-blog-app/my-blog/src/components/AddCommentForm.js"],"names":["React","useState","AddCommentForm","articleName","setArticleInfo","username","setUsername","commentText","setCommentText","addComment","fetch","method","body","JSON","stringify","text","headers","result","json","event","target","value"],"mappings":"meAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAqC,IAAlCC,CAAAA,WAAkC,MAAlCA,WAAkC,CAArBC,cAAqB,MAArBA,cAAqB,CAC1D;AAD0D,cAE1BH,QAAQ,EAFkB,wCAEnDI,QAFmD,eAEzCC,WAFyC,8BAGpBL,QAAQ,EAHY,yCAGnDM,WAHmD,eAGtCC,cAHsC,eAK1D;AACA;AACA,GAAMC,CAAAA,UAAU,2FAAG,yKACIC,CAAAA,KAAK,yBAAkBP,WAAlB,iBAA6C,CACrEQ,MAAM,CAAE,MAD6D,CAErEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAET,QAAQ,CAARA,QAAF,CAAYU,IAAI,CAAER,WAAlB,CAAf,CAF+D,CAGrES,OAAO,CAAE,CACP,eAAgB,kBADT,CAH4D,CAA7C,CADT,QACXC,MADW,qCAUEA,CAAAA,MAAM,CAACC,IAAP,EAVF,QAUXN,IAVW,eAYjB;AACAR,cAAc,CAACQ,IAAD,CAAd,CAEA;AACAN,WAAW,CAAC,EAAD,CAAX,CACAE,cAAc,CAAC,EAAD,CAAd,CAjBiB,sDAAH,kBAAVC,CAAAA,UAAU,2CAAhB,CAoBA,mBACE,2BAAK,EAAE,CAAC,kBAAR,eACE,+CADF,cAGE,sDAEE,6BACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEJ,QAFT,CAGE,QAAQ,CAAE,kBAACc,KAAD,QAAWb,CAAAA,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtB,EAHZ,EAFF,CAHF,cAYE,yDAEE,gCACE,IAAI,CAAC,GADP,CAEE,IAAI,CAAC,IAFP,CAGE,KAAK,CAAEd,WAHT,CAIE,QAAQ,CAAE,kBAACY,KAAD,QAAWX,CAAAA,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAzB,EAJZ,EAFF,CAZF,cAsBE,8BAAQ,OAAO,CAAE,yBAAMZ,CAAAA,UAAU,EAAhB,EAAjB,WAtBF,CADF,CA0BD,CArDD,CAuDA,cAAeP,CAAAA,cAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n  // Keep the state of user-name and comment-text\n  const [username, setUsername] = useState();\n  const [commentText, setCommentText] = useState();\n\n  // The function to post the form when the button is clicked\n  // fetch(`path`,{options})\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: \"post\",\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    // The api return the updated article\n    const body = await result.json();\n\n    // Trigger the root state change, which refreshs all the components\n    setArticleInfo(body);\n\n    // Reset the form\n    setUsername(\"\");\n    setCommentText(\"\");\n  };\n\n  return (\n    <div id=\"add-comment-form\">\n      <h3>Add a Comment:</h3>\n\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n      </label>\n\n      <label>\n        Comment:\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={commentText}\n          onChange={(event) => setCommentText(event.target.value)}\n        />\n      </label>\n\n      <button onClick={() => addComment()}>Submit</button>\n    </div>\n  );\n};\n\nexport default AddCommentForm;\n"]},"metadata":{},"sourceType":"module"}