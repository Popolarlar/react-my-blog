{
  "{\"sourceRoot\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend\",\"filename\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend\",\"plugins\":[],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jin/ReactProject/my-blog-app/my-blog-backend",
      "filename": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jin/ReactProject/my-blog-app/my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from \"express\";\nimport bodyParser from \"body-parser\";\nconst app = express(); // Use the BODY PARSER to parse the JSON object in the REQUEST and add a BODY property to the REQUEST parameter\n\napp.use(bodyParser.json()); // After that, we can use req.body.var to access JSON\n// Set a GET endpoint\n\napp.get(\"/hello\", (req, res) => res.send(\"Hello!\")); // Set a GET endpoint(use URL params)\n\napp.get(\"/hello/:name\", (req, res) => res.send(`Hello, ${req.params.name}!`)); // Set a POST endpoint(use boby parser)\n\napp.post(\"/hello\", (req, res) => res.send(`Hello, ${req.body.name}!`)); // Start the server\n\napp.listen(8000, () => console.log(\"Listening on port 8000!\")); // npx babel-node src/server.js\n// http://localhost:8000/hello\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImFwcCIsInVzZSIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwicGFyYW1zIiwibmFtZSIsInBvc3QiLCJib2R5IiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBUCxNQUFvQixTQUFwQjtBQUNBLE9BQU9DLFVBQVAsTUFBdUIsYUFBdkI7QUFFQSxNQUFNQyxHQUFHLEdBQUdGLE9BQU8sRUFBbkIsQyxDQUVBOztBQUNBRSxHQUFHLENBQUNDLEdBQUosQ0FBUUYsVUFBVSxDQUFDRyxJQUFYLEVBQVIsRSxDQUNBO0FBRUE7O0FBQ0FGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLFFBQVIsRUFBa0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLFFBQVQsQ0FBaEMsRSxDQUVBOztBQUNBTixHQUFHLENBQUNHLEdBQUosQ0FBUSxjQUFSLEVBQXdCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjQSxHQUFHLENBQUNDLElBQUosQ0FBVSxVQUFTRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFBSyxHQUFuQyxDQUF0QyxFLENBRUE7O0FBQ0FSLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLFFBQVQsRUFBbUIsQ0FBQ0wsR0FBRCxFQUFNQyxHQUFOLEtBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFVLFVBQVNGLEdBQUcsQ0FBQ00sSUFBSixDQUFTRixJQUFLLEdBQWpDLENBQWpDLEUsQ0FFQTs7QUFDQVIsR0FBRyxDQUFDVyxNQUFKLENBQVcsSUFBWCxFQUFpQixNQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWixDQUF2QixFLENBRUE7QUFDQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvamluL1JlYWN0UHJvamVjdC9teS1ibG9nLWFwcC9teS1ibG9nLWJhY2tlbmQvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBVc2UgdGhlIEJPRFkgUEFSU0VSIHRvIHBhcnNlIHRoZSBKU09OIG9iamVjdCBpbiB0aGUgUkVRVUVTVCBhbmQgYWRkIGEgQk9EWSBwcm9wZXJ0eSB0byB0aGUgUkVRVUVTVCBwYXJhbWV0ZXJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuLy8gQWZ0ZXIgdGhhdCwgd2UgY2FuIHVzZSByZXEuYm9keS52YXIgdG8gYWNjZXNzIEpTT05cblxuLy8gU2V0IGEgR0VUIGVuZHBvaW50XG5hcHAuZ2V0KFwiL2hlbGxvXCIsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoXCJIZWxsbyFcIikpO1xuXG4vLyBTZXQgYSBHRVQgZW5kcG9pbnQodXNlIFVSTCBwYXJhbXMpXG5hcHAuZ2V0KFwiL2hlbGxvLzpuYW1lXCIsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoYEhlbGxvLCAke3JlcS5wYXJhbXMubmFtZX0hYCkpO1xuXG4vLyBTZXQgYSBQT1NUIGVuZHBvaW50KHVzZSBib2J5IHBhcnNlcilcbmFwcC5wb3N0KFwiL2hlbGxvXCIsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoYEhlbGxvLCAke3JlcS5ib2R5Lm5hbWV9IWApKTtcblxuLy8gU3RhcnQgdGhlIHNlcnZlclxuYXBwLmxpc3Rlbig4MDAwLCAoKSA9PiBjb25zb2xlLmxvZyhcIkxpc3RlbmluZyBvbiBwb3J0IDgwMDAhXCIpKTtcblxuLy8gbnB4IGJhYmVsLW5vZGUgc3JjL3NlcnZlci5qc1xuLy8gaHR0cDovL2xvY2FsaG9zdDo4MDAwL2hlbGxvXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "send",
        "params",
        "name",
        "post",
        "body",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,MAAMC,GAAG,GAAGF,OAAO,EAAnB,C,CAEA;;AACAE,GAAG,CAACC,GAAJ,CAAQF,UAAU,CAACG,IAAX,EAAR,E,CACA;AAEA;;AACAF,GAAG,CAACG,GAAJ,CAAQ,QAAR,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,CAAS,QAAT,CAAhC,E,CAEA;;AACAN,GAAG,CAACG,GAAJ,CAAQ,cAAR,EAAwB,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,CAAU,UAASF,GAAG,CAACG,MAAJ,CAAWC,IAAK,GAAnC,CAAtC,E,CAEA;;AACAR,GAAG,CAACS,IAAJ,CAAS,QAAT,EAAmB,CAACL,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,IAAJ,CAAU,UAASF,GAAG,CAACM,IAAJ,CAASF,IAAK,GAAjC,CAAjC,E,CAEA;;AACAR,GAAG,CAACW,MAAJ,CAAW,IAAX,EAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB,E,CAEA;AACA",
      "sourceRoot": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\n\nconst app = express();\n\n// Use the BODY PARSER to parse the JSON object in the REQUEST and add a BODY property to the REQUEST parameter\napp.use(bodyParser.json());\n// After that, we can use req.body.var to access JSON\n\n// Set a GET endpoint\napp.get(\"/hello\", (req, res) => res.send(\"Hello!\"));\n\n// Set a GET endpoint(use URL params)\napp.get(\"/hello/:name\", (req, res) => res.send(`Hello, ${req.params.name}!`));\n\n// Set a POST endpoint(use boby parser)\napp.post(\"/hello\", (req, res) => res.send(`Hello, ${req.body.name}!`));\n\n// Start the server\napp.listen(8000, () => console.log(\"Listening on port 8000!\"));\n\n// npx babel-node src/server.js\n// http://localhost:8000/hello\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1593400191474
  },
  "{\"sourceRoot\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend\",\"filename\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jin/ReactProject/my-blog-app/my-blog-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jin/ReactProject/my-blog-app/my-blog-backend",
      "filename": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jin/ReactProject/my-blog-app/my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar withDB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect(\"mongodb://localhost:27017\", {\n              userNewUrlParser: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db(\"my-blog\");\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error connection to db!\",\n              error: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Use the BODY PARSER to parse the JSON object in the REQUEST and add a BODY property to the REQUEST parameter\n\n\napp.use(_bodyParser[\"default\"].json()); // After that, we can use req.body.var to access JSON\n// Set a GET endpoint\n\napp.get(\"/api/articles/:name\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var articleName;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            articleName = req.params.name;\n            withDB( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(db) {\n                var articleInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 2:\n                        articleInfo = _context2.sent;\n                        // Send JSON response\n                        res.status(200).json(articleInfo);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}()); // Set a POST endpoint(use URL params)\n\napp.post(\"/api/articles/:name/upvote\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var articleName;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            articleName = req.params.name;\n            withDB( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(db) {\n                var articleInfo, updatedInfo;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 2:\n                        articleInfo = _context4.sent;\n                        _context4.next = 5;\n                        return db.collection(\"articles\").updateOne({\n                          name: articleName\n                        }, {\n                          $set: {\n                            upvotes: articleInfo.upvotes + 1\n                          }\n                        });\n\n                      case 5:\n                        _context4.next = 7;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 7:\n                        updatedInfo = _context4.sent;\n                        // Send JSON response\n                        res.status(200).json(updatedInfo);\n\n                      case 9:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x7) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref4.apply(this, arguments);\n  };\n}()); // Set a POST endpoint(use body parser)\n\napp.post(\"/api/articles/:name/add-comment\", function (req, res) {\n  var articleName = req.params.name;\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  articleInfo[articleName].comments.push({\n    username: username,\n    text: text\n  });\n  res.status(200).send(articleInfo[articleName]);\n}); // Start the server\n// npx babel-node src/server.js\n// http://localhost:8000/hello\n\napp.listen(8000, function () {\n  return console.log(\"Listening on port 8000!\");\n}); // Use nodemon to automatically update server\n// npx nodemon --exec npx babel-node src/server.js\n// Put the script in package.json as \"start\"\n// npm start\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ3aXRoREIiLCJvcGVyYXRpb25zIiwiTW9uZ29DbGllbnQiLCJjb25uZWN0IiwidXNlck5ld1VybFBhcnNlciIsImNsaWVudCIsImRiIiwiY2xvc2UiLCJyZXMiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImVycm9yIiwidXNlIiwiYm9keVBhcnNlciIsImdldCIsInJlcSIsImFydGljbGVOYW1lIiwicGFyYW1zIiwibmFtZSIsImNvbGxlY3Rpb24iLCJmaW5kT25lIiwiYXJ0aWNsZUluZm8iLCJwb3N0IiwidXBkYXRlT25lIiwiJHNldCIsInVwdm90ZXMiLCJ1cGRhdGVkSW5mbyIsImJvZHkiLCJ1c2VybmFtZSIsInRleHQiLCJjb21tZW50cyIsInB1c2giLCJzZW5kIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7O0FBQ0EsSUFBTUMsTUFBTTtBQUFBLHFFQUFHLGlCQUFPQyxVQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFVUMscUJBQVlDLE9BQVosQ0FBb0IsMkJBQXBCLEVBQWlEO0FBQ3BFQyxjQUFBQSxnQkFBZ0IsRUFBRTtBQURrRCxhQUFqRCxDQUZWOztBQUFBO0FBRUxDLFlBQUFBLE1BRks7QUFLTEMsWUFBQUEsRUFMSyxHQUtBRCxNQUFNLENBQUNDLEVBQVAsQ0FBVSxTQUFWLENBTEE7QUFBQTtBQUFBLG1CQU1MTCxVQUFVLENBQUNLLEVBQUQsQ0FOTDs7QUFBQTtBQU9YRCxZQUFBQSxNQUFNLENBQUNFLEtBQVA7QUFQVztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQVNYQyxZQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxjQUFBQSxPQUFPLEVBQUUseUJBQVg7QUFBc0NDLGNBQUFB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c0MsYUFFdENBLElBRnNDO0FBSXhEUixFQUFBQSxXQUFXLENBQUNMLFdBQUQsQ0FBWCxDQUF5QmMsUUFBekIsQ0FBa0NDLElBQWxDLENBQXVDO0FBQUVILElBQUFBLFFBQVEsRUFBUkEsUUFBRjtBQUFZQyxJQUFBQSxJQUFJLEVBQUpBO0FBQVosR0FBdkM7QUFFQXRCLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0J3QixJQUFoQixDQUFxQlgsV0FBVyxDQUFDTCxXQUFELENBQWhDO0FBQ0QsQ0FQRCxFLENBU0E7QUFDQTtBQUNBOztBQUNBbEIsR0FBRyxDQUFDbUMsTUFBSixDQUFXLElBQVgsRUFBaUI7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWixDQUFOO0FBQUEsQ0FBakIsRSxDQUVBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qaW4vUmVhY3RQcm9qZWN0L215LWJsb2ctYXBwL215LWJsb2ctYmFja2VuZC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xuaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tIFwibW9uZ29kYlwiO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCB3aXRoREIgPSBhc3luYyAob3BlcmF0aW9ucykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QoXCJtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3XCIsIHtcbiAgICAgIHVzZXJOZXdVcmxQYXJzZXI6IHRydWUsXG4gICAgfSk7XG4gICAgY29uc3QgZGIgPSBjbGllbnQuZGIoXCJteS1ibG9nXCIpO1xuICAgIGF3YWl0IG9wZXJhdGlvbnMoZGIpO1xuICAgIGNsaWVudC5jbG9zZSgpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJFcnJvciBjb25uZWN0aW9uIHRvIGRiIVwiLCBlcnJvciB9KTtcbiAgfVxufTtcblxuLy8gVXNlIHRoZSBCT0RZIFBBUlNFUiB0byBwYXJzZSB0aGUgSlNPTiBvYmplY3QgaW4gdGhlIFJFUVVFU1QgYW5kIGFkZCBhIEJPRFkgcHJvcGVydHkgdG8gdGhlIFJFUVVFU1QgcGFyYW1ldGVyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbi8vIEFmdGVyIHRoYXQsIHdlIGNhbiB1c2UgcmVxLmJvZHkudmFyIHRvIGFjY2VzcyBKU09OXG5cbi8vIFNldCBhIEdFVCBlbmRwb2ludFxuYXBwLmdldChcIi9hcGkvYXJ0aWNsZXMvOm5hbWVcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGFydGljbGVOYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xuICB3aXRoREIoYXN5bmMgKGRiKSA9PiB7XG4gICAgY29uc3QgYXJ0aWNsZUluZm8gPSBhd2FpdCBkYlxuICAgICAgLmNvbGxlY3Rpb24oXCJhcnRpY2xlc1wiKVxuICAgICAgLmZpbmRPbmUoeyBuYW1lOiBhcnRpY2xlTmFtZSB9KTtcblxuICAgIC8vIFNlbmQgSlNPTiByZXNwb25zZVxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGFydGljbGVJbmZvKTtcbiAgfSk7XG59KTtcblxuLy8gU2V0IGEgUE9TVCBlbmRwb2ludCh1c2UgVVJMIHBhcmFtcylcbmFwcC5wb3N0KFwiL2FwaS9hcnRpY2xlcy86bmFtZS91cHZvdGVcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IGFydGljbGVOYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xuXG4gIHdpdGhEQihhc3luYyAoZGIpID0+IHtcbiAgICBjb25zdCBhcnRpY2xlSW5mbyA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcImFydGljbGVzXCIpXG4gICAgICAuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xuXG4gICAgYXdhaXQgZGIuY29sbGVjdGlvbihcImFydGljbGVzXCIpLnVwZGF0ZU9uZShcbiAgICAgIHsgbmFtZTogYXJ0aWNsZU5hbWUgfSxcbiAgICAgIHtcbiAgICAgICAgJHNldDoge1xuICAgICAgICAgIHVwdm90ZXM6IGFydGljbGVJbmZvLnVwdm90ZXMgKyAxLFxuICAgICAgICB9LFxuICAgICAgfVxuICAgICk7XG5cbiAgICBjb25zdCB1cGRhdGVkSW5mbyA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcImFydGljbGVzXCIpXG4gICAgICAuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xuXG4gICAgLy8gU2VuZCBKU09OIHJlc3BvbnNlXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24odXBkYXRlZEluZm8pO1xuICB9KTtcbn0pO1xuXG4vLyBTZXQgYSBQT1NUIGVuZHBvaW50KHVzZSBib2R5IHBhcnNlcilcbmFwcC5wb3N0KFwiL2FwaS9hcnRpY2xlcy86bmFtZS9hZGQtY29tbWVudFwiLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgYXJ0aWNsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XG4gIGNvbnN0IHsgdXNlcm5hbWUsIHRleHQgfSA9IHJlcS5ib2R5O1xuXG4gIGFydGljbGVJbmZvW2FydGljbGVOYW1lXS5jb21tZW50cy5wdXNoKHsgdXNlcm5hbWUsIHRleHQgfSk7XG5cbiAgcmVzLnN0YXR1cygyMDApLnNlbmQoYXJ0aWNsZUluZm9bYXJ0aWNsZU5hbWVdKTtcbn0pO1xuXG4vLyBTdGFydCB0aGUgc2VydmVyXG4vLyBucHggYmFiZWwtbm9kZSBzcmMvc2VydmVyLmpzXG4vLyBodHRwOi8vbG9jYWxob3N0OjgwMDAvaGVsbG9cbmFwcC5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coXCJMaXN0ZW5pbmcgb24gcG9ydCA4MDAwIVwiKSk7XG5cbi8vIFVzZSBub2RlbW9uIHRvIGF1dG9tYXRpY2FsbHkgdXBkYXRlIHNlcnZlclxuLy8gbnB4IG5vZGVtb24gLS1leGVjIG5weCBiYWJlbC1ub2RlIHNyYy9zZXJ2ZXIuanNcblxuLy8gUHV0IHRoZSBzY3JpcHQgaW4gcGFja2FnZS5qc29uIGFzIFwic3RhcnRcIlxuLy8gbnBtIHN0YXJ0XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "withDB",
        "operations",
        "MongoClient",
        "connect",
        "userNewUrlParser",
        "client",
        "db",
        "close",
        "res",
        "status",
        "json",
        "message",
        "error",
        "use",
        "bodyParser",
        "get",
        "req",
        "articleName",
        "params",
        "name",
        "collection",
        "findOne",
        "articleInfo",
        "post",
        "updateOne",
        "$set",
        "upvotes",
        "updatedInfo",
        "body",
        "username",
        "text",
        "comments",
        "push",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jin/ReactProject/my-blog-app/my-blog-backend/src/",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport { MongoClient } from \"mongodb\";\n\nconst app = express();\nconst withDB = async (operations) => {\n  try {\n    const client = await MongoClient.connect(\"mongodb://localhost:27017\", {\n      userNewUrlParser: true,\n    });\n    const db = client.db(\"my-blog\");\n    await operations(db);\n    client.close();\n  } catch (error) {\n    res.status(500).json({ message: \"Error connection to db!\", error });\n  }\n};\n\n// Use the BODY PARSER to parse the JSON object in the REQUEST and add a BODY property to the REQUEST parameter\napp.use(bodyParser.json());\n// After that, we can use req.body.var to access JSON\n\n// Set a GET endpoint\napp.get(\"/api/articles/:name\", async (req, res) => {\n  const articleName = req.params.name;\n  withDB(async (db) => {\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    // Send JSON response\n    res.status(200).json(articleInfo);\n  });\n});\n\n// Set a POST endpoint(use URL params)\napp.post(\"/api/articles/:name/upvote\", async (req, res) => {\n  const articleName = req.params.name;\n\n  withDB(async (db) => {\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    await db.collection(\"articles\").updateOne(\n      { name: articleName },\n      {\n        $set: {\n          upvotes: articleInfo.upvotes + 1,\n        },\n      }\n    );\n\n    const updatedInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    // Send JSON response\n    res.status(200).json(updatedInfo);\n  });\n});\n\n// Set a POST endpoint(use body parser)\napp.post(\"/api/articles/:name/add-comment\", (req, res) => {\n  const articleName = req.params.name;\n  const { username, text } = req.body;\n\n  articleInfo[articleName].comments.push({ username, text });\n\n  res.status(200).send(articleInfo[articleName]);\n});\n\n// Start the server\n// npx babel-node src/server.js\n// http://localhost:8000/hello\napp.listen(8000, () => console.log(\"Listening on port 8000!\"));\n\n// Use nodemon to automatically update server\n// npx nodemon --exec npx babel-node src/server.js\n\n// Put the script in package.json as \"start\"\n// npm start\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593409588409
  }
}